# application
spring.application.name=ms-registration

# web
server.port=${API_PORT:8080}
server.servlet.context-path=/api/registration

# mock external services
services.mock.enable=${ENABLE_MOCK_SERVICES:false}

# places api
places.api.key=${PLACES_API_KEY:fake_key}

# datasource
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${DATABASE_URL}/${DATABASE_DB}
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}

# JPA
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=${DATABASE_SCHEMA}
spring.jpa.hibernate.ddl-auto=update
# used for loading whishes in Order because used Lazy Loading in OneToMany Bidirecional
spring.jpa.open-in-view=true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# flyway
spring.flyway.enabled=${FLYWAY_ENABLE}

# Spring Actuator
management.endpoints.web.exposure.include=health, info, flyway, env

management.info.env.enabled=true
management.info.java.enabled=true

## Health
management.endpoint.health.show-details=always

## Info
info.app.name=${spring.application.name}
info.app.description=This application is responsible for User Operations
info.app.version=0.0.1
info.app.developer-name=Matheus Carvalho

## Paths
management.endpoints.web.base-path=/actuator/portal-admin
management.server.port=2022